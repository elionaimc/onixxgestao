{"version":3,"sources":["webpack:///./src/app/concierge/concierge-routing.module.ts","webpack:///./src/app/concierge/concierge.module.ts","webpack:///./src/app/concierge/login/login.component.html","webpack:///./src/app/concierge/login/login.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACc;AACE;AAEzD,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAc,EAAE;CACxC,CAAC;AAMF;IAAA;IAAsC,CAAC;IAA1B,sBAAsB;QAJlC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,sBAAsB,CAAI;IAAD,6BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;ACZM;AACM;AAEqB;AACX;AACZ;AAU7C;IAAA;IAA+B,CAAC;IAAnB,eAAe;QAR3B,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,qEAAc,CAAC;YAC9B,OAAO,EAAE;gBACP,4DAAY;gBACZ,gFAAsB;gBACtB,0DAAW;aACZ;SACF,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;ACf5B,2RAA2R,q7BAAq7B,OAAO,sD;;;;;;;;;;;;;;;;;;;;ACArqC;AAEO;AACC;AAEnB;AAOvC;IAME,wBACU,KAAqB,EACrB,MAAc,EACd,qBAAkC;QAFlC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,0BAAqB,GAArB,qBAAqB,CAAa;QAP5C,cAAS,GAAG,KAAK,CAAC;QAElB,UAAK,GAAG,EAAE,CAAC;IAMX,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;QACpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,WAAW,CAAC;IAC/E,CAAC;IAED,iCAAQ,GAAR,UAAS,CAAS;QAAlB,iBAmBC;QAlBC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,CAAC,OAAO,EAAE;YACb,OAAO;SACR;QAED,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;aAC9D,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CACR,cAAI;YACF,IAAI,IAAI,KAAK,KAAK,EAAE;gBAClB,KAAI,CAAC,KAAK,GAAG,iCAAiC,CAAC;aAChD;iBAAM;gBACL,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aACxC;QACH,CAAC,EACD,eAAK;YACH,KAAI,CAAC,KAAK,GAAG,6CAA6C,CAAC;QAC7D,CAAC,CAAC,CAAC;IACT,CAAC;IAED,+BAAM,GAAN;QACE,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;IACtC,CAAC;IAxCU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,6GAAqC;YACrC,mBAAmB,EAAE,IAAI;SAC1B,CAAC;+EAQiB,8DAAc;YACb,sDAAM;YACS,kEAAW;OATjC,cAAc,CAyC1B;IAAD,qBAAC;CAAA;AAzC0B","file":"concierge-concierge-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ConciergeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConciergeRoutingModule } from './concierge-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    ConciergeRoutingModule,\n    FormsModule\n  ]\n})\nexport class ConciergeModule { }\n","module.exports = \"<form class=\\\"form-signin\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\" novalidate>\\n  <img class=\\\"mb-4\\\" src=\\\"/assets/img/onixx.png\\\" alt=\\\"Onixx Sistemas\\\" class=\\\"mx-auto d-block p-3\\\" />\\n\\n  <!-- Login form -->\\n  <h4 class=\\\"h4 mb-3 font-weight-normal\\\">&nbsp;</h4>\\n  <label for=\\\"email\\\" class=\\\"sr-only\\\">E-mail</label>\\n  <input type=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"E-mail\\\" required name=\\\"email\\\" ngModel\\n    #email=\\\"ngModel\\\" email autofocus>\\n\\n  <label for=\\\"password\\\" class=\\\"sr-only\\\">Senha</label>\\n  <input type=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Senha\\\" minlength=\\\"5\\\" maxlength=\\\"40\\\" required\\n    name=\\\"password\\\" ngModel #password=\\\"ngModel\\\" password>\\n  <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"!f.form.valid\\\">\\n     Entrar\\n  </button>\\n  <div [hidden]=\\\"email.valid || email.pristine\\\" class=\\\"alert alert-warning\\\">\\n    <small>O email informado é inválido.</small>\\n  </div>\\n  <div [hidden]=\\\"password.valid || password.pristine\\\" class=\\\"alert alert-warning\\\">\\n    <small>Senha muito curta.</small>\\n  </div>\\n  <div *ngIf=\\\"error\\\" class=\\\"alert alert-warning\\\">\\n    <small>{{error}}</small>\\n  </div>\\n  <!--#login-form end-->\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/user.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { NgForm } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  preserveWhitespaces: true\n})\nexport class LoginComponent implements OnInit {\n  private user: User;\n  submitted = false;\n  returnUrl: string;\n  error = '';\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthService) {\n  }\n\n  ngOnInit() {\n    this.authenticationService.logout();\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/expenses';\n  }\n\n  onSubmit(f: NgForm) {\n    this.submitted = true;\n    if (f.invalid) {\n      return;\n    }\n\n    this.authenticationService.login(f.value.email, f.value.password)\n      .pipe(first())\n      .subscribe(\n        data => {\n          if (data === false) {\n            this.error = 'Nível de acesso não autorizado.';\n          } else {\n            this.router.navigate([this.returnUrl]);\n          }\n        },\n        error => {\n          this.error = 'Verifique as informações e tente novamente.';\n        });\n  }\n\n  logout() {\n    this.authenticationService.logout();\n  }\n}\n"],"sourceRoot":""}