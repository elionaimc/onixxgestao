{"version":3,"sources":["webpack:///./src/app/expenses/authorized/authorized.component.html","webpack:///./src/app/expenses/authorized/authorized.component.ts","webpack:///./src/app/expenses/denied/denied.component.html","webpack:///./src/app/expenses/denied/denied.component.ts","webpack:///./src/app/expenses/detail/detail.component.html","webpack:///./src/app/expenses/detail/detail.component.ts","webpack:///./src/app/expenses/expenses-routing.module.ts","webpack:///./src/app/expenses/expenses.module.ts","webpack:///./src/app/expenses/new/new.component.html","webpack:///./src/app/expenses/new/new.component.ts","webpack:///./src/app/services/expenses.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,2YAA2Y,qGAAqG,8mBAA8mB,cAAc,KAAK,yBAAyB,sGAAsG,kDAAkD,4DAA4D,yCAAyC,gQAAgQ,iI;;;;;;;;;;;;;;;;;;;;ACArlD;AACA;AAEkB;AACxB;AAM5C;IAME,6BAAoB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;QAJ5C,WAAM,GAAG,IAAI,CAAC;QAEd,WAAM,GAAG,IAAI,4CAAO,EAAW,CAAC;IAEgB,CAAC;IAEjD,sCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,uCAAS,GAAT;QAAA,iBAQC;QAPC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;aAC3C,IAAI,CACH,iEAAU,CAAC,eAAK;YACd,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,OAAO,0CAAK,CAAC;QACf,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,4CAAc,GAAd;QAAA,iBAEC;QADC,UAAU,CAAC,cAAM,YAAI,CAAC,MAAM,GAAG,KAAK,EAAnB,CAAmB,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAxBU,mBAAmB;QAJ/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,2HAA0C;SAC3C,CAAC;+EAO6B,iFAAe;OANjC,mBAAmB,CA0B/B;IAAD,0BAAC;CAAA;AA1B+B;;;;;;;;;;;;ACVhC,yYAAyY,qGAAqG,6kBAA6kB,cAAc,KAAK,yBAAyB,qGAAqG,kDAAkD,4DAA4D,yCAAyC,gQAAgQ,iI;;;;;;;;;;;;;;;;;;;;ACAjjD;AACA;AAEkB;AACxB;AAM5C;IAME,yBAAoB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;QAJ5C,WAAM,GAAG,IAAI,CAAC;QAEd,WAAM,GAAG,IAAI,4CAAO,EAAW,CAAC;IAEgB,CAAC;IAEjD,kCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,mCAAS,GAAT;QAAA,iBAQC;QAPC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;aACvC,IAAI,CACH,iEAAU,CAAC,eAAK;YACd,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,OAAO,0CAAK,CAAC;QACf,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,wCAAc,GAAd;QAAA,iBAEC;QADC,UAAU,CAAC,cAAM,YAAI,CAAC,MAAM,GAAG,KAAK,EAAnB,CAAmB,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAxBU,eAAe;QAJ3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,+GAAsC;SACvC,CAAC;+EAO6B,iFAAe;OANjC,eAAe,CA0B3B;IAAD,sBAAC;CAAA;AA1B2B;;;;;;;;;;;;ACV5B,4DAA4D,oDAAoD,2EAA2E,gFAAgF,mJAAmJ,uDAAuD,8CAA8C,uBAAuB,uBAAuB,KAAK,kCAAkC,iEAAiE,8CAA8C,sEAAsE,sDAAsD,2PAA2P,yCAAyC,2IAA2I,kDAAkD,mJAAmJ,gCAAgC,sNAAsN,qIAAqI,mEAAmE,mDAAmD,OAAO,8BAA8B,onEAAonE,mH;;;;;;;;;;;;;;;;;;;;;ACApgI;AACG;AAEf;AACmB;AACxB;AAO5C;IASE,yBACU,KAAqB,EACrB,OAAwB;QADxB,UAAK,GAAL,KAAK,CAAgB;QACrB,YAAO,GAAP,OAAO,CAAiB;QATlC,WAAM,GAAG,IAAI,CAAC;QAGd,WAAM,GAAG,IAAI,4CAAO,EAAW,CAAC;QAEhC,cAAS,GAAG,KAAK,CAAC;IAIoB,CAAC;IAEvC,kCAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAC/C,KAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACvB,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAI,CAAC,EAAE,CAAC;iBAC1C,IAAI,CACH,iEAAU,CAAC,eAAK;gBACd,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACvB,OAAO,0CAAK,CAAC;YACf,CAAC,CAAC,CACH,CAAC;QACN,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAQ,GAAR,UAAS,CAAS,EAAE,MAAM;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,CAAC,OAAO,EAAE;YACb,OAAO;SACR;QACD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,MAAM,CAAC;aACnE,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,qCAAW,GAAX;QACE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;IAC7B,CAAC;IArCU,eAAe;QAJ3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,+GAAsC;SACvC,CAAC;+EAWiB,8DAAc;YACZ,iFAAe;OAXvB,eAAe,CAuC3B;IAAD,sBAAC;CAAA;AAvC2B;;;;;;;;;;;;;;;;;;;;;;;ACZa;AACc;AACJ;AACqB;AACZ;AACA;AAE5D,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+DAAY,EAAE;IACrC,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,oFAAmB,EAAE;IACtD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,wEAAe,EAAE;CAC5C,CAAC;AAMF;IAAA;IAAqC,CAAC;IAAzB,qBAAqB;QAJjC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,qBAAqB,CAAI;IAAD,4BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBO;AACM;AAEmB;AACf;AACqB;AACZ;AACA;AACW;AACW;AACG;AACxC;AACU;AAyBvD;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAvB1B,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,+DAAY;gBACZ,oFAAmB;gBACnB,wEAAe;gBACf,wEAAe;aAChB;YACD,eAAe,EAAE;gBACf,+DAAY;gBACZ,oFAAmB;gBACnB,wEAAe;gBACf,wEAAe;gBACf,kFAAgB;gBAChB,6FAAmB;gBACnB,iGAAoB;aACrB;YACD,OAAO,EAAE;gBACP,4DAAY;gBACZ,8EAAqB;gBACrB,2DAAW;gBACX,mEAAY;aACb;SACF,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;ACrC3B,yYAAyY,qGAAqG,+jBAA+jB,cAAc,KAAK,gCAAgC,yFAAyF,kDAAkD,4DAA4D,yCAAyC,kOAAkO,iI;;;;;;;;;;;;;;;;;;;;ACAhgD;AAEA;AACkB;AACxB;AAO5C;IAME,sBAAoB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;QAJ5C,WAAM,GAAG,IAAI,CAAC;QAEd,WAAM,GAAG,IAAI,4CAAO,EAAW,CAAC;IAEgB,CAAC;IAEjD,+BAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,gCAAS,GAAT;QAAA,iBAQC;QAPC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;aACpC,IAAI,CACH,iEAAU,CAAC,eAAK;YACd,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,OAAO,0CAAK,CAAC;QACf,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,qCAAc,GAAd;QAAA,iBAEC;QADC,UAAU,CAAC,cAAM,YAAI,CAAC,MAAM,GAAG,KAAK,EAAnB,CAAmB,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAxBU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;YACnB,sGAAmC;YACnC,mBAAmB,EAAE,IAAI;SAC1B,CAAC;+EAO6B,iFAAe;OANjC,YAAY,CA0BxB;IAAD,mBAAC;CAAA;AA1BwB;;;;;;;;;;;;;;;;;;;;;;ACXkB;AACgB;AACG;AACrB;AAEJ;AAKrC;IAOE,yBAAoB,IAAgB,EAAU,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAL3C,aAAQ,GAAM,wEAAW,CAAC,GAAG,cAAW,CAAC;QACnD,QAAG,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC7C,eAAU,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QAC1D,WAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;IAEK,CAAC;IAEjE,iCAAO,GAAP;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACvE,CAAC;IAED,wCAAc,GAAd;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;IAC9E,CAAC;IAED,oCAAU,GAAV;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;IAC1E,CAAC;IAED,iCAAO,GAAP,UAAQ,EAAU;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,mCAAS,GAAT,UAAU,EAAE,EAAE,gBAAgB,EAAE,MAAM;QAAtC,iBAWC;QAVC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,EAAE,EACxB,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,MAAM,EAAE,MAAM,EAAE,CACvD,CAAC,IAAI,CACJ,0DAAG,CAAC,iBAAO;YACT,IAAI,OAAO,EAAE;gBACX,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IApCU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAQ0B,+DAAU,EAAkB,sDAAM;OAPjD,eAAe,CAqC3B;IAAD,sBAAC;CAAA;AArC2B","file":"expenses-expenses-module.js","sourcesContent":["module.exports = \"<div class=\\\"card mt-3 border-0\\\">\\n\\n  <div class=\\\"card-header bg-white border-0\\\">\\n    <div class=\\\"float-left\\\">\\n      <h4>Despesas autorizadas</h4>\\n    </div>\\n    <div class=\\\"float-right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"onRefresh()\\\">Atualizar</button>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"expenses$ | async as response; else loadingError\\\">\\n    <div class=\\\"table table-hover col-sm-offset-3\\\" *ngIf=\\\"response.success; else loading\\\">\\n      <div class=\\\"px-2 py-2\\\">\\n        <div class=\\\"card mt-3 border-0\\\" *ngIf=\\\"response.expenses.length == 0\\\">\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"alert light\\\">\\n              <h3>Tudo certo por aqui!</h3>\\n              <hr>\\n              <p><strong>Nenhuma despesa autorizada para exibir.</strong></p>\\n            </div>\\n          </div>\\n        </div>\\n        <a [routerLink]=\\\"[ '/expenses', expense.id ]\\\" *ngFor=\\\"let expense of response.expenses\\\">\\n          <div class=\\\"card border-success\\\">\\n            <h5 class=\\\"card-header text-white bg-success\\\">{{ expense.id }} - {{ expense.Provider.name }}</h5>\\n            <div class=\\\"card-body text-success\\\">\\n              <span class=\\\"card-title\\\">{{ expense.requested_value | currency:'BRL':'R$ ' }}</span>\\n              <p class=\\\"card-text\\\">Vencimento: {{ expense.due_date | date: 'dd/MM/yyyy' }}</p>\\n            </div>\\n          </div>\\n          <br />\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <ng-template #loading>\\n    <app-loading></app-loading>\\n  </ng-template>\\n\\n  <ng-template #loadingError>\\n    <div *ngIf=\\\"error$ | async; else loading\\\" class=\\\"card mt-3 border-0\\\">\\n      <app-server-error></app-server-error>\\n    </div>\\n  </ng-template>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Observable, Subject, EMPTY } from 'rxjs';\nimport { Expense } from 'src/app/models/expense.model';\nimport { ExpensesService } from 'src/app/services/expenses.service';\nimport { catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-authorized',\n  templateUrl: './authorized.component.html'\n})\nexport class AuthorizedComponent implements OnInit {\n\n  splash = true;\n  expenses$: Observable<Expense[]>;\n  error$ = new Subject<boolean>();\n\n  constructor(private service: ExpensesService) { }\n\n  ngOnInit() {\n    this.onRefresh();\n  }\n\n  onRefresh() {\n    this.expenses$ = this.service.listAuthorized()\n      .pipe(\n        catchError(error => {\n          this.error$.next(true);\n          return EMPTY;\n        })\n      );\n  }\n\n  ionViewDidLoad() {\n    setTimeout(() => this.splash = false, 4000);\n  }\n\n}\n","module.exports = \"<div class=\\\"card mt-3 border-0\\\">\\n\\n  <div class=\\\"card-header bg-white border-0\\\">\\n    <div class=\\\"float-left\\\">\\n      <h4>Despesas recusadas</h4>\\n    </div>\\n    <div class=\\\"float-right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"onRefresh()\\\">Atualizar</button>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"expenses$ | async as response; else loadingError\\\">\\n    <div class=\\\"table table-hover col-sm-offset-3\\\" *ngIf=\\\"response.success; else loading\\\">\\n      <div class=\\\"px-2 py-2\\\">\\n        <div class=\\\"card mt-3 border-0\\\" *ngIf=\\\"response.expenses.length == 0\\\">\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"alert light\\\">\\n              <h3>PARABÉNS</h3>\\n              <hr>\\n              <p>Nenhuma despesa recusada para exibir.</p>\\n            </div>\\n          </div>\\n        </div>\\n        <a [routerLink]=\\\"[ '/expenses', expense.id ]\\\" *ngFor=\\\"let expense of response.expenses\\\">\\n          <div class=\\\"card border-danger\\\">\\n            <h5 class=\\\"card-header text-white bg-danger\\\">{{ expense.id }} - {{ expense.Provider.name }}</h5>\\n            <div class=\\\"card-body text-danger\\\">\\n              <span class=\\\"card-title\\\">{{ expense.requested_value | currency:'BRL':'R$ ' }}</span>\\n              <p class=\\\"card-text\\\">Vencimento: {{ expense.due_date | date: 'dd/MM/yyyy' }}</p>\\n            </div>\\n          </div>\\n          <br />\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <ng-template #loading>\\n    <app-loading></app-loading>\\n  </ng-template>\\n\\n  <ng-template #loadingError>\\n    <div *ngIf=\\\"error$ | async; else loading\\\" class=\\\"card mt-3 border-0\\\">\\n      <app-server-error></app-server-error>\\n    </div>\\n  </ng-template>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Observable, Subject, EMPTY } from 'rxjs';\nimport { Expense } from 'src/app/models/expense.model';\nimport { ExpensesService } from 'src/app/services/expenses.service';\nimport { catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-denied',\n  templateUrl: './denied.component.html'\n})\nexport class DeniedComponent implements OnInit {\n\n  splash = true;\n  expenses$: Observable<Expense[]>;\n  error$ = new Subject<boolean>();\n\n  constructor(private service: ExpensesService) { }\n\n  ngOnInit() {\n    this.onRefresh();\n  }\n\n  onRefresh() {\n    this.expenses$ = this.service.listDenied()\n      .pipe(\n        catchError(error => {\n          this.error$.next(true);\n          return EMPTY;\n        })\n      );\n  }\n\n  ionViewDidLoad() {\n    setTimeout(() => this.splash = false, 4000);\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"expense$ | async as response; else loadingError\\\" style=\\\"height:100% !important;\\\" class=\\\"panel\\\">\\n    <div class=\\\"card mt-3\\\" *ngIf=\\\"response.success; else paramError\\\">\\n  \\n      <div class=\\\"card-header\\\"\\n        [ngClass]=\\\"{'bg-light': response.expense.status=='nova', 'bg-danger': response.expense.status=='recusada', 'bg-success': response.expense.status=='autorizada'}\\\">\\n        <div class=\\\"card-subtitle\\\" [ngClass]=\\\"{'text-white': response.expense.status!='nova'}\\\">\\n          Cód.: {{ response.expense.id }} - {{ response.expense.Provider.name }}\\n        </div>\\n        <div class=\\\"card-title\\\" [ngClass]=\\\"{'text-white': response.expense.status!='nova'}\\\">\\n          <span class=\\\"badge badge-light\\\">Solicitado:</span> {{ response.expense.requested_value | currency: 'BRL' }}\\n          <br />\\n        </div>\\n      </div>\\n  \\n      <div class=\\\"row panel py-2 px-2\\\">\\n        <div class=\\\"col-sm-6\\\">\\n          <p class=\\\"card-text\\\">\\n            <span class=\\\"badge badge-light\\\">Categoria:</span><br />\\n            {{ response.expense.Category.description }}\\n          </p>\\n          <p class=\\\"card-text\\\">\\n            <span class=\\\"badge badge-light\\\">Vencimento:</span><br />\\n            {{ response.expense.due_date | date: 'dd/MM/yyyy' }}\\n          </p>\\n          <p class=\\\"card-text\\\"><span class=\\\"badge badge-light\\\">Detalhes:</span><br />\\n            <span class=\\\"content\\\">{{ response.expense.description }}</span>\\n            <br />\\n          </p>\\n          <div class=\\\"card-title\\\" *ngIf=\\\"response.expense.status == 'autorizada' \\\">\\n            <span class=\\\"badge badge-light\\\">Autorizado:</span>\\n            {{ response.expense.authorized_value == NULL? response.expense.requested_value : response.expense.authorized_value | currency: 'BRL' }}\\n          </div>\\n          <small>\\n            Cadastrada em {{ response.expense.createdAt | date: 'dd/MM/yyyy' }} por {{ response.expense.User.name }}\\n          </small>\\n        </div>\\n  \\n        <div class=\\\"col-sm-6\\\" *ngIf=\\\"response.expense.status=='nova'\\\">\\n          <form class=\\\"form-auth border rounded border-danger px-2 py-2\\\" novalidate #f=\\\"ngForm\\\">\\n            <div class=\\\"row justify-content-center\\\">\\n              <div class=\\\"col-sm-9\\\">\\n                <label for=\\\"authorized\\\">\\n                  <h3>Autorizar ou Recusar</h3>\\n                </label>\\n              </div>\\n            </div>\\n            <div class=\\\"row justify-content-center\\\">\\n              <div class=\\\"col-sm-9\\\">\\n                <input type=\\\"number\\\" id=\\\"authorized\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"response.expense.authorized_value\\\"\\n                  #authorized=\\\"ngModel\\\" name=\\\"authorized_value\\\" autofocus />\\n              </div>\\n            </div>\\n            <div class=\\\"row justify-content-center py-3\\\">\\n              <div class=\\\"col-6 text-center\\\">\\n                <button (click)=\\\"onSubmit(f, 'recusada')\\\" class=\\\"btn btn-danger\\\" id=\\\"recusada\\\"\\n                  name=\\\"recusada\\\">Recusar</button>\\n              </div>\\n              <div class=\\\"col-6 text-center\\\">\\n                <button (click)=\\\"onSubmit(f, 'autorizada')\\\" class=\\\"btn btn-success\\\" id=\\\"autorizada\\\"\\n                  name=\\\"autorizada\\\">Autorizar</button>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n  \\n        <div class=\\\"py-2 px-3 panel w-100\\\">\\n          <button type=\\\"button\\\" class=\\\"float-right btn btn-primary btn-sm\\\" *ngIf=\\\"response.expense.status!='nova'\\\"\\n            [routerLink]=\\\"response.expense.status=='recusada' ? ['/expenses/denied'] : ['/expenses/authorized']\\\">Voltar</button>\\n          <button type=\\\"button\\\" class=\\\"float-right btn btn-primary btn-sm\\\" *ngIf=\\\"response.expense.status=='nova'\\\"\\n            [routerLink]=\\\"['/expenses']\\\">Voltar</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n<ng-template #paramError>\\n  <app-param-error></app-param-error>\\n</ng-template>\\n\\n<ng-template #loading>\\n  <app-loading></app-loading>\\n</ng-template>\\n\\n<ng-template #loadingError>\\n  <div *ngIf=\\\"error$ | async; else loading\\\" class=\\\"card mt-3 border-0\\\">\\n    <app-server-error></app-server-error>\\n  </div>\\n</ng-template>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subject, Subscription, EMPTY } from 'rxjs';\nimport { Expense } from 'src/app/models/expense.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { ExpensesService } from 'src/app/services/expenses.service';\nimport { catchError } from 'rxjs/operators';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html'\n})\nexport class DetailComponent implements OnInit, OnDestroy {\n\n  splash = true;\n  id: number;\n  expense$: Observable<Expense>;\n  error$ = new Subject<boolean>();\n  control: Subscription;\n  submitted = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private service: ExpensesService) { }\n\n  ngOnInit() {\n    this.control = this.route.params.subscribe(params => {\n      this.id = params['id'];\n      this.expense$ = this.service.listOne(this.id)\n        .pipe(\n          catchError(error => {\n            this.error$.next(true);\n            return EMPTY;\n          })\n        );\n    });\n  }\n\n  onSubmit(f: NgForm, status) {\n    this.submitted = true;\n    if (f.invalid) {\n      return;\n    }\n    this.service.updateOne(this.id, f.form.value.authorized_value, status)\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.control.unsubscribe();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NewComponent } from './new/new.component';\nimport { AuthorizedComponent } from './authorized/authorized.component';\nimport { DeniedComponent } from './denied/denied.component';\nimport { DetailComponent } from './detail/detail.component';\n\nconst routes: Routes = [\n  { path: '', component: NewComponent },\n  { path: 'authorized', component: AuthorizedComponent },\n  { path: 'denied', component: DeniedComponent },\n  { path: ':id', component: DetailComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ExpensesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ExpensesRoutingModule } from './expenses-routing.module';\nimport { NewComponent } from './new/new.component';\nimport { AuthorizedComponent } from './authorized/authorized.component';\nimport { DeniedComponent } from './denied/denied.component';\nimport { DetailComponent } from './detail/detail.component';\nimport { LoadingComponent } from '../layout/loading/loading.component';\nimport { ParamErrorComponent } from '../layout/param-error/param-error.component';\nimport { ServerErrorComponent } from '../layout/server-error/server-error.component';\nimport { FormsModule } from '@angular/forms';\nimport { LayoutModule } from '../layout/layout.module';\n\n@NgModule({\n  declarations: [\n    NewComponent,\n    AuthorizedComponent,\n    DeniedComponent,\n    DetailComponent\n  ],\n  entryComponents: [\n    NewComponent,\n    AuthorizedComponent,\n    DeniedComponent,\n    DetailComponent,\n    LoadingComponent,\n    ParamErrorComponent,\n    ServerErrorComponent\n  ],\n  imports: [\n    CommonModule,\n    ExpensesRoutingModule,\n    FormsModule,\n    LayoutModule\n  ]\n})\nexport class ExpensesModule { }\n","module.exports = \"<div class=\\\"card mt-3 border-0\\\">\\n\\n  <div class=\\\"card-header bg-white border-0\\\">\\n    <div class=\\\"float-left\\\">\\n      <h4>Despesas pendentes</h4>\\n    </div>\\n    <div class=\\\"float-right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"onRefresh()\\\">Atualizar</button>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\\"expenses$ | async as response; else loadingError\\\">\\n    <div class=\\\"table table-hover col-sm-offset-3\\\" *ngIf=\\\"response.success; else loading\\\">\\n      <div class=\\\"px-2 py-2\\\">\\n        <div class=\\\"card mt-3 border-0\\\" *ngIf=\\\"response.expenses.length == 0\\\">\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"alert light\\\">\\n              <h3>PARABÉNS</h3>\\n              <hr>\\n              <p><strong>Nenhuma despesa pendente!</strong></p>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"card mt-3\\\" *ngFor=\\\"let expense of response.expenses\\\" >\\n        <a [routerLink]=\\\"[ '/expenses', expense.id ]\\\">\\n          \\n            <h5 class=\\\"card-header\\\">{{ expense.id }} - {{ expense.Provider.razaoSocial }}</h5>\\n            <div class=\\\"card-body\\\">\\n              <span class=\\\"card-title\\\">{{ expense.requested_value | currency:'BRL':'R$ ' }}</span>\\n              <p class=\\\"card-text\\\">Vencimento: {{ expense.due_date | date: 'dd/MM/yyyy' }}</p>\\n            </div>\\n        </a></div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <ng-template #loading>\\n    <app-loading></app-loading>\\n  </ng-template>\\n\\n  <ng-template #loadingError>\\n    <div *ngIf=\\\"error$ | async; else loading\\\" class=\\\"card mt-3 border-0\\\">\\n      <app-server-error></app-server-error>\\n    </div>\\n  </ng-template>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Expense } from 'src/app/models/expense.model';\nimport { Observable, Subject, EMPTY } from 'rxjs';\nimport { ExpensesService } from 'src/app/services/expenses.service';\nimport { catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  preserveWhitespaces: true\n})\nexport class NewComponent implements OnInit {\n\n  splash = true;\n  expenses$: Observable<Expense[]>;\n  error$ = new Subject<boolean>();\n\n  constructor(private service: ExpensesService) { }\n\n  ngOnInit() {\n    this.onRefresh();\n  }\n\n  onRefresh() {\n    this.expenses$ = this.service.listNew()\n      .pipe(\n        catchError(error => {\n          this.error$.next(true);\n          return EMPTY;\n        })\n      );\n  }\n\n  ionViewDidLoad() {\n    setTimeout(() => this.splash = false, 1000);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpParams, HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Expense } from '../models/expense.model';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExpensesService {\n\n  private readonly RESOURCE = `${environment.API}/expenses`;\n  public new = new HttpParams().set('status', 'nova');\n  public authorized = new HttpParams().set('status', 'autorizada');\n  public denied = new HttpParams().set('status', 'recusada');\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  listNew() {\n    return this.http.get<Expense[]>(this.RESOURCE, { params: this.new });\n  }\n\n  listAuthorized() {\n    return this.http.get<Expense[]>(this.RESOURCE, { params: this.authorized });\n  }\n\n  listDenied() {\n    return this.http.get<Expense[]>(this.RESOURCE, { params: this.denied });\n  }\n\n  listOne(id: number) {\n    return this.http.get<Expense>(this.RESOURCE + '/' + id);\n  }\n\n  updateOne(id, authorized_value, status) {\n    return this.http.put(\n      this.RESOURCE + '/' + id,\n      { authorized_value: authorized_value, status: status }\n    ).pipe(\n      map(success => {\n        if (success) {\n          this.router.navigate(['/expenses']);\n        }\n      })\n    );\n  }\n}\n"],"sourceRoot":""}