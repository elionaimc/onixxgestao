{"version":3,"sources":["webpack:///./src/app/services/alert-modal.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAoF;AACzB;AAChB;AAK3C;IACE,2BAAoB,YAA4B;QAA5B,iBAAY,GAAZ,YAAY,CAAgB;IAAI,CAAC;IAErD,2CAAe,GAAf,UAAgB,OAAe;QAC7B,IAAI,OAAO,KAAK,eAAe;YAAE,OAAO,GAAG,qDAAqD,CAAC;QACjG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IACpC,CAAC;IAED,4CAAgB,GAAhB,UAAiB,OAAe;QAC9B,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IACrC,CAAC;IAED,4CAAgB,GAAhB,UAAiB,OAAe;QAC9B,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IACrC,CAAC;IAED,yCAAa,GAAb,UAAc,OAAe;QAC3B,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAClC,CAAC;IAED,4CAAgB,GAAhB,UAAiB,OAAe;QAC9B,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IACrC,CAAC;IAED,8CAAkB,GAAlB,UAAmB,OAAe;QAChC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IACvC,CAAC;IAED,0CAAc,GAAd,UAAe,OAAe;QAC5B,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACnC,CAAC;IAED,yCAAa,GAAb,UAAc,OAAe;QAC3B,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAClC,CAAC;IAEO,qCAAS,GAAjB,UAAkB,OAAe,EAAE,IAAY;QAC7C,IAAM,UAAU,GAAe,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,6FAAmB,CAAC,CAAC;QAC3E,UAAU,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QAC/B,UAAU,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;IACvC,CAAC;IAxCU,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAEkC,4DAAc;OADrC,iBAAiB,CAyC7B;IAAD,wBAAC;CAAA;AAzC6B","file":"common.js","sourcesContent":["import { AlertModalComponent } from './../shared/alert-modal/alert-modal.component';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertModalService {\n  constructor(private modalService: BsModalService) { }\n\n  showAlertDanger(message: string) {\n    if (message === 'Unknown Error') message = 'ERRO: O servidor não está respondendo corretamente!';\n    this.showAlert(message, 'danger');\n  }\n\n  showAlertSuccess(message: string) {\n    this.showAlert(message, 'success');\n  }\n\n  showAlertWarning(message: string) {\n    this.showAlert(message, 'warning');\n  }\n\n  showAlertInfo(message: string) {\n    this.showAlert(message, 'info');\n  }\n\n  showAlertPrimary(message: string) {\n    this.showAlert(message, 'primary');\n  }\n\n  showAlertSecondary(message: string) {\n    this.showAlert(message, 'secondary');\n  }\n\n  showAlertLight(message: string) {\n    this.showAlert(message, 'light');\n  }\n\n  showAlertDark(message: string) {\n    this.showAlert(message, 'dark');\n  }\n\n  private showAlert(message: string, type: string) {\n    const bsModalRef: BsModalRef = this.modalService.show(AlertModalComponent);\n    bsModalRef.content.type = type;\n    bsModalRef.content.message = message;\n  }\n}\n"],"sourceRoot":""}