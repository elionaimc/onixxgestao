{"version":3,"sources":["webpack:///./src/app/providers/create/create.component.html","webpack:///./src/app/providers/create/create.component.ts","webpack:///./src/app/providers/detail/detail.component.html","webpack:///./src/app/providers/detail/detail.component.ts","webpack:///./src/app/providers/list/list.component.html","webpack:///./src/app/providers/list/list.component.ts","webpack:///./src/app/providers/providers-routing.module.ts","webpack:///./src/app/providers/providers.module.ts","webpack:///./src/app/services/providers.service.ts"],"names":[],"mappings":"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","file":"providers-providers-module.js","sourcesContent":["module.exports = \"<div class=\\\"panel py-5 px-5\\\">\\n  <form class=\\\"form-auth border rounded border-primary px-2 py-2\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\" novalidate>\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-sm-9\\\">\\n        <label for=\\\"authorized\\\">\\n          <h3>Cadastrar Fornecedor</h3>\\n        </label>\\n      </div>\\n    </div>\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-sm-9\\\">\\n        <label for=\\\"razaoSocial\\\">Razão Social</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" ngModel #razaoSocial=\\\"ngModel\\\" \\n         name=\\\"razaoSocial\\\" placeholder=\\\"Ex: Indústrias Acme LTDA\\\" minlength=\\\"5\\\" maxlength=\\\"100\\\" required/>\\n      </div>\\n    </div>\\n    <div class=\\\"row justify-content-center py-1\\\">\\n      <div class=\\\"col-sm-9\\\">\\n        <label for=\\\"CNPJ\\\">CNPJ</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" ngModel #CNPJ=\\\"ngModel\\\"\\n         name=\\\"CNPJ\\\" placeholder=\\\"CNPJ\\\" minlength=\\\"10\\\" maxlength=\\\"40\\\" required/>\\n      </div>\\n    </div>\\n    <div class=\\\"row justify-content-center py-1\\\">\\n      <div *ngIf=\\\"error\\\" class=\\\"alert alert-warning\\\">\\n        <small>{{error}}</small>\\n      </div>\\n    </div>\\n    <div class=\\\"row justify-content-center py-3\\\">\\n      <div class=\\\"text-center\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"!f.form.valid\\\" class=\\\"btn btn-success btn-lg\\\" id=\\\"cadastrar\\\"\\n          name=\\\"cadastrar\\\">Cadastrar</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ProvidersService } from 'src/app/services/providers.service';\nimport { Provider } from 'src/app/models/provider.model';\nimport { User } from 'src/app/models/user.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  preserveWhitespaces: true\n})\nexport class CreateComponent implements OnInit {\n\n  submitted = false;\n  error: string;\n  provider: Provider;\n  currentUser: User;\n\n  constructor(\n    private providersService: ProvidersService,\n    private router: Router\n    ) { }\n\n  ngOnInit() {\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  }\n\n  onSubmit(f: NgForm) {\n    this.submitted = true;\n    if (f.invalid) {\n      return;\n    }\n    this.provider = {\n      razaoSocial: f.form.value.razaoSocial,\n      CNPJ: f.form.value.CNPJ,\n      PrefectureId: this.currentUser.PrefectureId,\n      UserId: this.currentUser.id\n    };\n    this.providersService.create(this.provider)\n      .subscribe(\n        success => this.router.navigate(['/providers']),\n        error => this.error = error\n      );\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"provider$ | async as response; else loadingError\\\">\\n  <div *ngIf=\\\"response.success; else paramError\\\" class=\\\"p-5\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header bg-light\\\"\\n        [ngClass]=\\\"{'text-danger': response.provider.isActive == false}\\\">\\n          <h3>{{ response.provider.razaoSocial }}</h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        \\n        <h5 class=\\\"card-subtitle mb-2 text-muted\\\">CNPJ: {{ response.provider.CNPJ }}</h5>\\n        <p class=\\\"card-text\\\">\\n          <small>\\n            Fornecedor cadastrado em {{ response.provider.createdAt | date: 'dd/MM/yyyy' }}\\n            por {{ response.provider.User.name }}.\\n          </small>\\n        </p>\\n        <a [routerLink]=\\\"[ '/providers']\\\" class=\\\"card-link\\\">Voltar</a>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <ng-template>\\n    <app-param-error #paramError></app-param-error>\\n  </ng-template>\\n\\n</div>\\n\\n<ng-template #loading>\\n  <app-loading></app-loading>\\n</ng-template>\\n\\n<ng-template #loadingError>\\n  <div *ngIf=\\\"error$ | async; else loading\\\" class=\\\"card mt-3 border-0\\\">\\n    <app-server-error></app-server-error>\\n  </div>\\n</ng-template>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subject, Subscription, EMPTY } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { catchError } from 'rxjs/operators';\nimport { Provider } from 'src/app/models/provider.model';\nimport { ProvidersService } from 'src/app/services/providers.service';\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  preserveWhitespaces: true\n})\nexport class DetailComponent implements OnInit {\n\n  splash = true;\n  id: number;\n  provider$: Observable<Provider>;\n  error$ = new Subject<boolean>();\n\n  constructor(private router: ActivatedRoute, private service: ProvidersService) { }\n\n  ngOnInit() {\n    this.router.params.subscribe(params => {\n      this.id = params['id'];\n      this.provider$ = this.service.listOne(this.id)\n        .pipe(\n          catchError(error => {\n            this.error$.next(true);\n            return EMPTY;\n          })\n        );\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"card mt-3 border-0\\\">\\n  <div class=\\\"card-header border-0 bg-white\\\">\\n    <div class=\\\"float-left\\\">\\n      <h4>Fornecedores</h4>\\n    </div>\\n    <div class=\\\"float-right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" [routerLink]=\\\"['novo']\\\">Cadastrar</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"onRefresh()\\\">Atualizar</button>\\n    </div>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"panel row\\\" *ngIf=\\\"providers$ | async as response; else loadingError\\\">\\n      <table class=\\\"table table-hover\\\" *ngIf=\\\"response.success; else loading\\\">\\n        <thead>\\n          <tr>\\n            <th class=\\\"border-top border-secondary bg-secondary text-white\\\">#</th>\\n            <th class=\\\"border-top border-secondary bg-secondary text-white\\\">Fornecedor</th>\\n            <th class=\\\"border-top border-secondary bg-secondary text-white\\\"></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let provider of response.providers\\\">\\n            <td class=\\\"border-bottom border-primary\\\">\\n              {{ provider.id }}\\n            </td>\\n            <td class=\\\"border-bottom border-primary\\\">\\n              <a [routerLink]=\\\"[ '/providers', provider.id ]\\\">\\n                {{ provider.razaoSocial }}\\n              </a>\\n            </td>\\n            <td class=\\\"border-bottom border-primary\\\">\\n              <span class=\\\"float-right\\\">\\n                <button class=\\\"btn btn-warning mb-1 btn-sm\\\">\\n                  Editar\\n                </button>\\n\\n                <button class=\\\"btn btn-danger mb-1 btn-sm\\\">\\n                  Ativar/Desativar\\n                </button>\\n              </span>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    <ng-template #loading>\\n      <app-loading></app-loading>\\n    </ng-template>\\n\\n    <ng-template #loadingError>\\n      <div *ngIf=\\\"error$ | async; else loading\\\" class=\\\"card mt-3 border-0\\\">\\n        <app-server-error></app-server-error>\\n      </div>\\n    </ng-template>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Provider } from 'src/app/models/provider.model';\nimport { Observable, Subject, EMPTY } from 'rxjs';\nimport { ProvidersService } from 'src/app/services/providers.service';\nimport { catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  preserveWhitespaces: true\n})\nexport class ListComponent implements OnInit {\n\n  providers$: Observable<Provider[]>;\n  error$ = new Subject<boolean>();\n\n  constructor(private service: ProvidersService) { }\n\n  ngOnInit() {\n    this.onRefresh();\n  }\n\n  onRefresh() {\n    this.providers$ = this.service.listAll()\n      .pipe(\n        catchError(error => {\n          this.error$.next(true);\n          return EMPTY;\n        })\n      );\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListComponent } from './list/list.component';\nimport { DetailComponent } from './detail/detail.component';\nimport { CreateComponent } from './create/create.component';\n\nconst routes: Routes = [\n  { path: '', component: ListComponent },\n  { path: 'novo', component: CreateComponent },\n  { path: ':id', component: DetailComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProvidersRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProvidersRoutingModule } from './providers-routing.module';\nimport { ListComponent } from './list/list.component';\nimport { DetailComponent } from './detail/detail.component';\nimport { CreateComponent } from './create/create.component';\nimport { FormsModule } from '@angular/forms';\nimport { LayoutModule } from '../layout/layout.module';\nimport { ParamErrorComponent } from '../layout/param-error/param-error.component';\nimport { ServerErrorComponent } from '../layout/server-error/server-error.component';\n\n@NgModule({\n  declarations: [ListComponent, DetailComponent, CreateComponent],\n  entryComponents: [\n    ListComponent,\n    DetailComponent,\n    CreateComponent,\n    ParamErrorComponent,\n    ServerErrorComponent\n  ],\n  imports: [\n    CommonModule,\n    ProvidersRoutingModule,\n    FormsModule,\n    LayoutModule\n  ]\n})\nexport class ProvidersModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Provider } from '../models/provider.model';\nimport { take } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProvidersService {\n\n    private readonly RESOURCE = `${environment.API}/providers/`;\n\n    constructor(private http: HttpClient) { }\n\n    listAll() {\n        return this.http.get<Provider[]>(this.RESOURCE);\n    }\n\n    listOne(id: number) {\n        return this.http.get<Provider>(this.RESOURCE + id);\n    }\n\n    create(provider: Provider) {\n        return this.http.post<Provider>(this.RESOURCE, provider).pipe(take(1));\n    }\n}\n"],"sourceRoot":""}