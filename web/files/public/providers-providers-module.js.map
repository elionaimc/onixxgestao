{"version":3,"sources":["webpack:///./src/app/providers/create/create.component.html","webpack:///./src/app/providers/create/create.component.ts","webpack:///./src/app/providers/detail/detail.component.html","webpack:///./src/app/providers/detail/detail.component.ts","webpack:///./src/app/providers/edit/edit.component.html","webpack:///./src/app/providers/edit/edit.component.ts","webpack:///./src/app/providers/list/list.component.html","webpack:///./src/app/providers/list/list.component.ts","webpack:///./src/app/providers/providers-routing.module.ts","webpack:///./src/app/providers/providers.module.ts","webpack:///./src/app/services/providers.service.ts"],"names":[],"mappings":"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","file":"providers-providers-module.js","sourcesContent":["module.exports = \"<div class=\\\"alert my-0\\\" role=\\\"alert\\\">\\n  <div class=\\\"modal-header border-bottom border-light\\\">\\n    <h4 class=\\\"modal-title\\\">Cadastrar Fornecedor</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"onClose()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <form class=\\\"form-auth\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\" novalidate>\\n  <div class=\\\"modal-body\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <label for=\\\"razaoSocial\\\">Razão Social</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" ngModel #socialName=\\\"ngModel\\\" name=\\\"socialName\\\"\\n            placeholder=\\\"Ex: Indústrias Acme LTDA\\\" minlength=\\\"5\\\" maxlength=\\\"100\\\" required />\\n        </div>\\n      </div>\\n      <div class=\\\"row justify-content-center py-1\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <label for=\\\"CNPJ\\\">CNPJ</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" ngModel #cnpj=\\\"ngModel\\\" name=\\\"cnpj\\\" placeholder=\\\"Ex: 000.000.000/0000-00\\\" minlength=\\\"10\\\"\\n            maxlength=\\\"40\\\" required />\\n        </div>\\n      </div>\\n      <div class=\\\"row justify-content-center py-1\\\">\\n        <div *ngIf=\\\"error\\\" class=\\\"alert alert-warning\\\">\\n          <small>{{error}}</small>\\n        </div>\\n      </div>\\n    <div class=\\\"row justify-content-center py-3\\\">\\n      <div class=\\\"text-center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onClose()\\\">Cancelar</button>\\n        <button type=\\\"submit\\\" [disabled]=\\\"!f.form.valid\\\" class=\\\"btn btn-primary\\\" id=\\\"cadastrar\\\"\\n          name=\\\"cadastrar\\\">Cadastrar</button>\\n      </div>\\n    </div>\\n  </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ProvidersService } from 'src/app/services/providers.service';\nimport { Provider } from 'src/app/models/provider.model';\nimport { User } from 'src/app/models/user.model';\nimport { Router, ActivatedRoute} from '@angular/router';\nimport { BsModalRef } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  preserveWhitespaces: true\n})\nexport class CreateComponent implements OnInit {\n\n  submitted = false;\n  error: string;\n  provider: Provider;\n  currentUser: User;\n\n  constructor(\n    private providersService: ProvidersService,\n    private bsModalRef: BsModalRef,\n    private router: Router,\n    public route: ActivatedRoute\n    ) { }\n\n  ngOnInit() {\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  }\n\n  onSubmit(f: NgForm) {\n    this.submitted = true;\n    if (f.invalid) {\n      return;\n    }\n    this.provider = {\n      socialName: f.form.value.socialName,\n      cnpj: f.form.value.cnpj,\n      PrefectureId: this.currentUser['PrefectureId'],\n      UserId: this.currentUser['id']\n    };\n    this.providersService.create(this.provider)\n      .subscribe(\n        success => {\n          this.bsModalRef.hide();\n          this.router.navigate(['/providers']);\n        },\n        error => this.error = error\n      );\n  }\n\n  onClose() {\n    this.bsModalRef.hide();\n    this.router.navigate(['/providers']);\n  }\n\n}\n","module.exports = \"<div class=\\\"card mt-3 border-0\\\">\\n<div *ngIf=\\\"provider$ | async as response; else loadingError\\\">\\n  <div *ngIf=\\\"response.success; else paramError\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header bg-light\\\"\\n        [ngClass]=\\\"{'text-danger': response.provider.isActive == false}\\\">\\n          <h3>{{ response.provider.socialName }}</h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        \\n        <h5 class=\\\"card-subtitle mb-2 text-muted\\\">CNPJ: {{ response.provider.cnpj }}</h5>\\n        <p class=\\\"card-text\\\">\\n          <small>\\n            Fornecedor cadastrado em {{ response.provider.createdAt | date: 'dd/MM/yyyy' }}\\n            por {{ response.provider.User.name }}.\\n          </small>\\n        </p>\\n        <a [routerLink]=\\\"[ '/providers']\\\" class=\\\"card-link\\\">Voltar</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #loading>\\n  <app-loading></app-loading>\\n</ng-template>\\n\\n<ng-template #loadingError>\\n  <div *ngIf=\\\"error$ | async; else loading\\\" class=\\\"card mt-3 border-0\\\">\\n    <app-param-error [message]=\\\"defaultMessage\\\" type=\\\"warning\\\"></app-param-error>\\n  </div>\\n</ng-template>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Observable, Subject, EMPTY } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Provider } from 'src/app/models/provider.model';\nimport { ProvidersService } from 'src/app/services/providers.service';\nimport { AlertModalService } from 'src/app/services/alert-modal.service';\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  preserveWhitespaces: true\n})\nexport class DetailComponent implements OnInit {\n\n  defaultMessage: 'Nenhum fornecedor encontrado com o identificador fornecido';\n  provider$: Observable<Provider>;\n  error$ = new Subject<boolean>();\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private providersService: ProvidersService,\n    private alertService: AlertModalService\n    ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const id = params['id'];\n      this.provider$ = this.providersService.listOne(id)\n        .pipe(\n          catchError(error => {\n            this.alertService.showAlertDanger(error);\n            this.error$.next(true);\n            return EMPTY;\n          }),\n          tap(data => {\n            if (!data['success'] && data['message']) {\n              if (id != 'new') {\n                this.alertService.showAlertWarning(data['message']);\n                this.router.navigate(['/providers']);\n              }\n              return EMPTY;\n            }\n          })\n        );\n    });\n  }\n\n}\n","module.exports = \"<div class=\\\"alert my-0\\\" role=\\\"alert\\\">\\n  <div class=\\\"modal-header border-bottom border-light\\\">\\n    <h4 class=\\\"modal-title\\\">Editar Fornecedor</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"onCancel()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <form class=\\\"form-auth\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <label for=\\\"razaoSocial\\\">Razão Social</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"socialName\\\" name=\\\"razaoSocial\\\"\\n            placeholder=\\\"Ex: Indústrias Acme LTDA\\\" minlength=\\\"5\\\" maxlength=\\\"100\\\" required />\\n        </div>\\n      </div>\\n      <div class=\\\"row justify-content-center py-1\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <label for=\\\"CNPJ\\\">CNPJ</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"cnpj\\\" name=\\\"CNPJ\\\"\\n            placeholder=\\\"Ex: 000.000.000/0000-00\\\" minlength=\\\"5\\\" maxlength=\\\"100\\\" required />\\n        </div>\\n      </div>\\n      <div class=\\\"row justify-content-center py-1\\\">\\n        <div *ngIf=\\\"error\\\" class=\\\"alert alert-warning\\\">\\n          <small>{{error}}</small>\\n        </div>\\n      </div>\\n      <div class=\\\"row justify-content-center py-3\\\">\\n        <div class=\\\"text-center\\\">\\n          <button type=\\\"reset\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"onCancel()\\\">Cancelar</button>\\n          <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\" class=\\\"btn btn-primary\\\" id=\\\"editar\\\"\\n            name=\\\"editar\\\">Editar</button>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ProvidersService } from 'src/app/services/providers.service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { User } from 'src/app/models/user.model';\nimport { BsModalRef } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  preserveWhitespaces: true\n})\nexport class EditComponent implements OnInit {\n\n  submitted = false;\n  form: FormGroup;\n  error: string;\n  currentUser: User;\n  id: number;\n\n  constructor(\n    private providersService: ProvidersService,\n    private fb: FormBuilder,\n    private bsModalRef: BsModalRef\n  ) { }\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      id: [null],\n      cnpj: [null],\n      socialName: [null]\n    });\n    const provider$ = this.providersService.listOne(this.id);\n    provider$.subscribe(data => this.updateForm(data['provider']));\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.form.invalid) {\n      return;\n    }\n    this.providersService.edit({\n      id: this.form.value.id,\n      socialName: this.form.value.socialName,\n      cnpj: this.form.value.cnpj\n    }).subscribe(\n        success => {\n        this.bsModalRef.hide();\n        },\n        error => this.error = `Erro ao editar fornecedor. Servidor retornou ${error}`\n      );\n  }\n\n  updateForm(provider) {\n    this.form.patchValue({\n      id: provider.id,\n      socialName: provider.socialName,\n      cnpj: provider.cnpj\n    });\n  }\n\n  onCancel() {\n    this.form.reset();\n    this.bsModalRef.hide();\n  }\n\n}\n","module.exports = \"<div class=\\\"card mt-3 border-0\\\">\\n  <div class=\\\"card-header border-0 bg-white\\\">\\n    <div class=\\\"float-left\\\">\\n      <h4>Fornecedores</h4>\\n    </div>\\n    <div class=\\\"float-right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"create()\\\">\\n        <fa-icon [icon]=\\\"faPlus\\\"></fa-icon> <span class=\\\"d-none d-lg-inline\\\">Cadastrar</span>\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"onRefresh()\\\">\\n        <fa-icon [icon]=\\\"faSync\\\"></fa-icon> <span class=\\\"d-none d-lg-inline\\\">Atualizar</span>\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"panel row\\\" *ngIf=\\\"providers$ | async as response; else loadingError\\\">\\n      <table class=\\\"table table-hover\\\" *ngIf=\\\"response.success; else paramError\\\">\\n        <thead>\\n          <tr>\\n            <th class=\\\"border-0 bg-dark text-white\\\">Razão Social</th>\\n            <th class=\\\"border-0 bg-dark text-white\\\"></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let provider of response.providers\\\">\\n            <td class=\\\"border-bottom border-dark text-left\\\">\\n              <a [routerLink]=\\\"[ '/providers', provider.id ]\\\" [ngClass]=\\\"{'text-secondary': !provider.isActive}\\\">\\n                {{ provider.socialName }}\\n              </a>\\n            </td>\\n            <td class=\\\"border-bottom border-dark\\\">\\n              <span class=\\\"float-right\\\">\\n                <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Second group\\\">\\n                  <button class=\\\"btn btn-outline-primary mb-1 btn-sm\\\" (click)=\\\"edit(provider.id)\\\">\\n                    <fa-icon [icon]=\\\"faPencilAlt\\\"></fa-icon>\\n                  </button>\\n                  <button *ngIf=\\\"provider.isActive\\\" class=\\\"btn btn-success mb-1 btn-sm\\\"\\n                  (click)=\\\"changeState(provider.id, provider.isActive)\\\">\\n                    <fa-icon [icon]=\\\"faCheck\\\"></fa-icon>\\n                  </button>\\n                  <button *ngIf=\\\"!provider.isActive\\\" class=\\\"btn btn-outline-secondary mb-1 btn-sm\\\"\\n                  (click)=\\\"changeState(provider.id, provider.isActive)\\\">\\n                  <fa-icon [icon]=\\\"faCheck\\\"></fa-icon>\\n                  </button>\\n                </div>\\n              </span>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n    <ng-template #paramError>\\n      <app-param-error [message]=\\\"emptyMessage\\\"></app-param-error>\\n    </ng-template>\\n\\n    <ng-template #loading>\\n      <app-loading></app-loading>\\n    </ng-template>\\n\\n    <ng-template #loadingError>\\n      <div *ngIf=\\\"error$ | async; else loading\\\" class=\\\"card mt-3 border-0\\\">\\n        <app-param-error message=\\\"Entre em contato com o administrador do sistema!\\\" type=\\\"danger\\\"></app-param-error>\\n      </div>\\n    </ng-template>\\n  </div>\\n</div>\\n\"","import { BsModalService } from 'ngx-bootstrap';\nimport { AlertModalService } from './../../services/alert-modal.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Provider } from 'src/app/models/provider.model';\nimport { Observable, Subject, EMPTY } from 'rxjs';\nimport { ProvidersService } from 'src/app/services/providers.service';\nimport { catchError } from 'rxjs/operators';\nimport { CreateComponent } from '../create/create.component';\nimport { faCheck, faPencilAlt, faPlus, faSync } from '@fortawesome/free-solid-svg-icons';\nimport { EditComponent } from '../edit/edit.component';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  preserveWhitespaces: true\n})\nexport class ListComponent implements OnInit {\n\n  providers$: Observable<Provider[]>;\n  error$ = new Subject<boolean>();\n  emptyMessage = 'Não exitem fornecedores cadastrados!';\n  faPencilAlt = faPencilAlt;\n  faCheck = faCheck;\n  faPlus = faPlus;\n  faSync = faSync;\n\n  modalOptions = {\n    class: 'modal-lg'\n  }\n\n  constructor(\n    private providersService: ProvidersService,\n    private alertService: AlertModalService,\n    private modalService: BsModalService,\n    ) { }\n\n  ngOnInit() {\n    this.onRefresh();\n    this.modalService.onHide.subscribe(() => this.onRefresh());\n  }\n\n  onRefresh() {\n    this.providers$ = this.providersService.listAll()\n    .pipe(\n      catchError(error => {\n        this.alertService.showAlertDanger(error);\n        this.error$.next(true);\n        return EMPTY;\n      })\n    );\n  }\n\n  create() {\n    this.modalService.show(CreateComponent, this.modalOptions);\n  }\n\n  edit(id) {\n    this.modalOptions['initialState'] = { id: id };\n    this.modalService.show(EditComponent, this.modalOptions);\n  }\n\n  changeState(id, isActive){\n    this.providersService.edit({\n      id: id,\n      isActive: !isActive\n    }).subscribe(\n      success => this.onRefresh(),\n      error => this.alertService.showAlertDanger(`Erro ao editar fornecedor. Servidor retornou ${error}`)\n    );\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListComponent } from './list/list.component';\nimport { DetailComponent } from './detail/detail.component';\n\nconst routes: Routes = [\n  { path: '', component: ListComponent },\n  { path: ':id', component: DetailComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProvidersRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProvidersRoutingModule } from './providers-routing.module';\nimport { ListComponent } from './list/list.component';\nimport { DetailComponent } from './detail/detail.component';\nimport { CreateComponent } from './create/create.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LayoutModule } from '../layout/layout.module';\nimport { ParamErrorComponent } from '../layout/param-error/param-error.component';\nimport { ServerErrorComponent } from '../layout/server-error/server-error.component';\nimport { EditComponent } from './edit/edit.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [ListComponent, DetailComponent, CreateComponent, EditComponent],\n  entryComponents: [\n    ListComponent,\n    DetailComponent,\n    CreateComponent,\n    EditComponent,\n    ParamErrorComponent,\n    ServerErrorComponent\n  ],\n  imports: [\n    CommonModule,\n    ProvidersRoutingModule,\n    FormsModule,\n    LayoutModule,\n    ReactiveFormsModule,\n    FontAwesomeModule\n  ]\n})\nexport class ProvidersModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Provider } from '../models/provider.model';\nimport { take } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProvidersService {\n\n    private readonly RESOURCE = `${environment.API}/providers/`;\n\n    constructor(private http: HttpClient) { }\n\n    listAll() {\n        return this.http.get<Provider[]>(this.RESOURCE);\n    }\n\n    listOne(id: number) {\n        return this.http.get<Provider>(`${this.RESOURCE}${id}`);\n    }\n\n    create(provider: Provider) {\n        return this.http.post<Provider>(this.RESOURCE, provider).pipe(take(1));\n    }\n\n    edit(provider) {\n        return this.http.put<Provider>(`${this.RESOURCE}${provider.id}`, provider).pipe(take(1));\n    }\n}\n"],"sourceRoot":""}